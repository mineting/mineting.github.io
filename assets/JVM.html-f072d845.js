const l=JSON.parse('{"key":"v-261a4068","path":"/Java/JVM.html","title":"JVM","lang":"en-US","frontmatter":{"title":"JVM","date":"2023-03-01T00:00:00.000Z","description":"JVM\\r 【Refer】\\r 宋红康 JVM JVM与Java体系结构 Java虚拟机概述 为什么要学 JVM？ 1. 如何让系统更快， 如何避免系统出现性能瓶颈。单纯的依靠物理机不足以解决问题，分析系统性能、调优系统瓶颈离不了对 JVM 中内存、垃圾回收、字节码指令、性能监控工具、调优参数的熟练掌握。 2. JVM 是 Java 生态的核心价值的体现，...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-MineTing.netlify.app/Java/JVM.html"}],["meta",{"property":"og:site_name","content":"Docs Demo"}],["meta",{"property":"og:title","content":"JVM"}],["meta",{"property":"og:description","content":"JVM\\r 【Refer】\\r 宋红康 JVM JVM与Java体系结构 Java虚拟机概述 为什么要学 JVM？ 1. 如何让系统更快， 如何避免系统出现性能瓶颈。单纯的依靠物理机不足以解决问题，分析系统性能、调优系统瓶颈离不了对 JVM 中内存、垃圾回收、字节码指令、性能监控工具、调优参数的熟练掌握。 2. JVM 是 Java 生态的核心价值的体现，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-MineTing.netlify.app/"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JVM"}],["meta",{"property":"article:author","content":"MineTing"}],["meta",{"property":"article:published_time","content":"2023-03-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-MineTing.netlify.app/\\"],\\"datePublished\\":\\"2023-03-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MineTing\\"}]}"]]},"headers":[{"level":2,"title":"JVM与Java体系结构","slug":"jvm与java体系结构","link":"#jvm与java体系结构","children":[{"level":3,"title":"Java虚拟机概述","slug":"java虚拟机概述","link":"#java虚拟机概述","children":[]},{"level":3,"title":"Java 及 JVM简介","slug":"java-及-jvm简介","link":"#java-及-jvm简介","children":[]},{"level":3,"title":"Java虚拟机的作用","slug":"java虚拟机的作用","link":"#java虚拟机的作用","children":[]},{"level":3,"title":"Java虚拟机的特点","slug":"java虚拟机的特点","link":"#java虚拟机的特点","children":[]},{"level":3,"title":"JDK 的结构","slug":"jdk-的结构","link":"#jdk-的结构","children":[]},{"level":3,"title":"JVM整体结构（HotSpot）","slug":"jvm整体结构-hotspot","link":"#jvm整体结构-hotspot","children":[]}]},{"level":2,"title":"类加载子系统","slug":"类加载子系统","link":"#类加载子系统","children":[{"level":3,"title":"内存结构概述","slug":"内存结构概述","link":"#内存结构概述","children":[]},{"level":3,"title":"类加载器以及类的加载过程","slug":"类加载器以及类的加载过程","link":"#类加载器以及类的加载过程","children":[]},{"level":3,"title":"ClassLoader：类加载器","slug":"classloader-类加载器","link":"#classloader-类加载器","children":[]},{"level":3,"title":"类的加载过程：Loading","slug":"类的加载过程-loading","link":"#类的加载过程-loading","children":[]},{"level":3,"title":"类的链接过程：Linking","slug":"类的链接过程-linking","link":"#类的链接过程-linking","children":[]},{"level":3,"title":"类的初始化过程：Initialization","slug":"类的初始化过程-initialization","link":"#类的初始化过程-initialization","children":[]},{"level":3,"title":"几种类加载器的说明","slug":"几种类加载器的说明","link":"#几种类加载器的说明","children":[]},{"level":3,"title":"类加载器的分类","slug":"类加载器的分类","link":"#类加载器的分类","children":[]},{"level":3,"title":"双亲委派机制","slug":"双亲委派机制","link":"#双亲委派机制","children":[]}]},{"level":2,"title":"运行时数据区及概述及线程","slug":"运行时数据区及概述及线程","link":"#运行时数据区及概述及线程","children":[{"level":3,"title":"运行时数据区结构概述","slug":"运行时数据区结构概述","link":"#运行时数据区结构概述","children":[]},{"level":3,"title":"JVM中的线程说明","slug":"jvm中的线程说明","link":"#jvm中的线程说明","children":[]},{"level":3,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[]}]},{"level":2,"title":"虚拟机栈","slug":"虚拟机栈","link":"#虚拟机栈","children":[{"level":3,"title":"虚拟机栈的概述","slug":"虚拟机栈的概述","link":"#虚拟机栈的概述","children":[]},{"level":3,"title":"栈的存储结构和运行原理","slug":"栈的存储结构和运行原理","link":"#栈的存储结构和运行原理","children":[]},{"level":3,"title":"局部变量表","slug":"局部变量表","link":"#局部变量表","children":[]},{"level":3,"title":"操作数栈","slug":"操作数栈","link":"#操作数栈","children":[]},{"level":3,"title":"栈顶缓存技术","slug":"栈顶缓存技术","link":"#栈顶缓存技术","children":[]},{"level":3,"title":"动态链接","slug":"动态链接","link":"#动态链接","children":[]},{"level":3,"title":"方法的调用","slug":"方法的调用","link":"#方法的调用","children":[]},{"level":3,"title":"方法返回地址","slug":"方法返回地址","link":"#方法返回地址","children":[]},{"level":3,"title":"一些附加信息","slug":"一些附加信息","link":"#一些附加信息","children":[]},{"level":3,"title":"相关5个问题","slug":"相关5个问题","link":"#相关5个问题","children":[]}]},{"level":2,"title":"本地方法接口（Java Method Interface）","slug":"本地方法接口-java-method-interface","link":"#本地方法接口-java-method-interface","children":[]},{"level":2,"title":"本地方法栈（Native Method Stack）","slug":"本地方法栈-native-method-stack","link":"#本地方法栈-native-method-stack","children":[]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[{"level":3,"title":"堆的核心描述","slug":"堆的核心描述","link":"#堆的核心描述","children":[]},{"level":3,"title":"堆的核心描述：内存细分","slug":"堆的核心描述-内存细分","link":"#堆的核心描述-内存细分","children":[]},{"level":3,"title":"设置堆内存的大小与OOM","slug":"设置堆内存的大小与oom","link":"#设置堆内存的大小与oom","children":[]},{"level":3,"title":"年轻代与老年代","slug":"年轻代与老年代","link":"#年轻代与老年代","children":[]},{"level":3,"title":"图像对象的分配过程","slug":"图像对象的分配过程","link":"#图像对象的分配过程","children":[]},{"level":3,"title":"Minor GC、Major GC、Full GC","slug":"minor-gc、major-gc、full-gc","link":"#minor-gc、major-gc、full-gc","children":[]},{"level":3,"title":"对象分配过程：TLAB","slug":"对象分配过程-tlab","link":"#对象分配过程-tlab","children":[]}]},{"level":2,"title":"垃圾回收概述","slug":"垃圾回收概述","link":"#垃圾回收概述","children":[{"level":3,"title":"什么是垃圾","slug":"什么是垃圾","link":"#什么是垃圾","children":[]},{"level":3,"title":"为什么需要GC","slug":"为什么需要gc","link":"#为什么需要gc","children":[]},{"level":3,"title":"早期垃圾回收","slug":"早期垃圾回收","link":"#早期垃圾回收","children":[]},{"level":3,"title":"Java 自动内存管理介绍","slug":"java-自动内存管理介绍","link":"#java-自动内存管理介绍","children":[]}]},{"level":2,"title":"垃圾回收算法","slug":"垃圾回收算法","link":"#垃圾回收算法","children":[{"level":3,"title":"标记阶段：引用计数算法","slug":"标记阶段-引用计数算法","link":"#标记阶段-引用计数算法","children":[]},{"level":3,"title":"标记阶段：可达性分析算法","slug":"标记阶段-可达性分析算法","link":"#标记阶段-可达性分析算法","children":[]},{"level":3,"title":"对象的 finalization 机制","slug":"对象的-finalization-机制","link":"#对象的-finalization-机制","children":[]},{"level":3,"title":"MAT 与 jprofiler 的 GC ROSTS 溯源","slug":"mat-与-jprofiler-的-gc-rosts-溯源","link":"#mat-与-jprofiler-的-gc-rosts-溯源","children":[]},{"level":3,"title":"清除阶段：标记-清除算法","slug":"清除阶段-标记-清除算法","link":"#清除阶段-标记-清除算法","children":[]},{"level":3,"title":"清除阶段：复制算法","slug":"清除阶段-复制算法","link":"#清除阶段-复制算法","children":[]},{"level":3,"title":"清除阶段：标记-压缩算法","slug":"清除阶段-标记-压缩算法","link":"#清除阶段-标记-压缩算法","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":3,"title":"分代收集算法","slug":"分代收集算法","link":"#分代收集算法","children":[]},{"level":3,"title":"增量收集算法、分区算法","slug":"增量收集算法、分区算法","link":"#增量收集算法、分区算法","children":[]}]},{"level":2,"title":"垃圾回收概念","slug":"垃圾回收概念","link":"#垃圾回收概念","children":[]},{"level":2,"title":"垃圾回收器","slug":"垃圾回收器","link":"#垃圾回收器","children":[]}],"git":{},"readingTime":{"minutes":75.27,"words":22581},"filePathRelative":"Java/JVM.md","localizedDate":"March 1, 2023","autoDesc":true}');export{l as data};
